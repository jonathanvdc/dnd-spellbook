{"version":3,"sources":["Spellbook.tsx","FilterableSpellbook.tsx","App.tsx","serviceWorker.ts","index.tsx","SpellThumbnail.tsx","SpellCard.tsx","Tilt.tsx","SpellLink.tsx","model/spell.ts"],"names":["Spellbook","headerClass","isFirefox","elems","spellsByLevel","this","props","spells","level","levelSpells","levelName","push","className","spellListItems","spellsBySchool","school","first","spell","item","key","name","once","placeholder","SpellLink","PureComponent","localStorageKey","FilterableSpellbook","savedState","localStorage","getItem","state","JSON","parse","classes","values","setState","setItem","stringify","value","newClasses","filter","x","includes","updateClasses","val","length","some","c","usefulClasses","allClasses","s","map","type","onChange","vals","toggleClass","src","alt","getFilteredSpells","Component","LinterResults","lazy","App","allSpells","fetch","then","response","json","fallback","exact","path","render","routeProps","MainScreenRouter","isSearching","query","searchingNow","obj","history","getSpellId","searchData","SpellThumbnail","getSpellType","searchBox","data","fuseConfigs","keys","onSearchChange","bind","onSelect","onSearchSelect","SpellRoute","find","match","params","spellId","SpellCard","thumbStyle","width","height","style","transform","LinterRoute","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","undefined","showImage","getSpellThumbnailUrl","html_whitelist","components","verbal","somatic","material","casting_time","range","join","duration","mats","materials_needed","createFactFootnote","hide_links","children","to","href","node","trim","startsWith","is_in_html_whitelist","description","updatedDesc","replace","renderers","link","renderLink","source","allowNode","escapeHtml","unwrapDisallowed","baseDesc","formatDescription","quote","higher_levels","pageAttribution","pages","text","url","omitTitle","results","title","createExternalLink","author","author_website","getShortLicenseName","license","getLicenseUrl","sources","thumbnail_source","hide_footer","firstSource","citeIconSource","i","thumbnailUrl","thumbnailSource","createFooter","createPropertiesGrid","createDescription","createFootnotes","createSourceCitation","Tilt","left","top","transitionTimeout","updateCall","element","settings","reverse","Object","assign","max","perspective","easing","scale","speed","transition","axis","reset","options","findDOMNode","myNode","setTimeout","parentElement","querySelector","onPointerEnter","clearTimeout","cancelAnimationFrame","e","updateElementPosition","willChange","setTransition","requestAnimationFrame","persist","update","onPointerMove","onPointerLeave","nativeEvent","clientX","y","clientY","_x","Math","min","_y","tiltX","toFixed","tiltY","percentageX","percentageY","rect","getBoundingClientRect","offsetWidth","offsetHeight","getValues","createSpellUrl","spellLink","linkImage","isMobile","followCursor","shiftX","shiftY","Trigger","Hover","SpellLinkPlaceholder","thumbnail_url","sortedLevels","sortedSchools","sortBy","list","getKey","sort","a","b","groupBy","sortedGroups","bins","Map","bin","get","set","levelSpellPairs","code","getLicenseName","suffix","endsWith","substring","trimRight","whitelist","enc","dash","toLowerCase","test","result","last","getOrinalSuffix","parseInt","ritual"],"mappings":"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","file":"static/js/main.ffca0d87.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\nimport { Spell, spellsByLevel, spellsBySchool } from \"./model/spell\";\nimport { isFirefox } from \"react-device-detect\";\nimport \"./Spellbook.css\";\nimport \"./hr.css\";\nimport SpellLink, { SpellLinkPlaceholder } from \"./SpellLink\";\nimport LazyLoad from \"react-lazyload\";\n\n/**\n * A component that displays a sequence of spells.\n */\nclass Spellbook extends PureComponent<{ spells: Spell[] }> {\n    render() {\n        let headerClass = \"SpellSchoolHeader Sideways\" + (isFirefox ? \"Firefox\" : \"Other\");\n        let elems = [];\n        for (let { level, spells: levelSpells } of spellsByLevel(this.props.spells)) {\n            let levelName = level === \"cantrip\" ? \"Cantrips\" : `Level ${level} spells`;\n            elems.push(<div className=\"LevelHeader\">{levelName}</div>);\n\n            let spellListItems: JSX.Element[] = [];\n            for (let { school, spells } of spellsBySchool(levelSpells)) {\n                let first = true;\n                for (let spell of spells) {\n                    let item = <div key={spell.name} className=\"SpellListItem\">\n                        <LazyLoad once placeholder={<SpellLinkPlaceholder spell={spell}/>}><SpellLink spell={spell}/></LazyLoad>\n                    </div>;\n                    if (first) {\n                        // Include header in a spell list item, so that the header\n                        // won't get placed alone at the end of a line.\n                        spellListItems.push(<div key={spell.name + '-first'} className=\"FirstSpellListItem\">\n                            <div className={headerClass}>{school}</div>\n                            {item}\n                        </div>);\n                        first = false;\n                    } else {\n                        spellListItems.push(item);\n                    }\n                }\n            }\n            elems.push(<div className=\"SpellList\">{spellListItems}</div>);\n        }\n        return <div className=\"SpellbookPanel\">{elems}</div>;\n    }\n}\n\nexport default Spellbook;\n","import React, { Component } from \"react\";\nimport { Spell, Class, allClasses } from \"./model/spell\";\nimport Spellbook from \"./Spellbook\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\nimport \"./FilterableSpellbook.css\";\n\ntype Props = { spells: Spell[] };\ntype State = {\n    classes: Class[]\n};\n\n// TODO: avoid updating local storage here as it breaks composability.\n// Use callbacks instead.\nconst localStorageKey = \"spellbook-filter-state\";\n\nclass FilterableSpellbook extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        let savedState = localStorage.getItem(localStorageKey);\n        if (savedState) {\n            this.state = JSON.parse(savedState);\n        } else {\n            this.state = {\n                classes: []\n            };\n        }\n    }\n\n    updateClasses(values: Class[]) {\n        this.setState({\n            ...this.state,\n            classes: values\n        }, () => {\n            localStorage.setItem(\"spellbook-filter-state\", JSON.stringify(this.state));\n        });\n    }\n\n    toggleClass(key: Class, value: boolean[]) {\n        let newClasses = this.state.classes.filter(x => x !== key);\n        if (value.includes(true)) {\n            newClasses.push(key);\n        }\n        this.updateClasses(newClasses);\n    }\n\n    getFilteredSpells(): Spell[] {\n        return this.props.spells.filter(val =>\n            this.state.classes.length === 0\n            || val.classes.some(c => this.state.classes.includes(c)));\n    }\n\n    render() {\n        let usefulClasses = allClasses\n            .filter(c => this.props.spells.some(s => s.classes.includes(c)));\n        return <div>\n            {usefulClasses.map(c =>\n                    <ToggleButtonGroup type=\"checkbox\" value={[this.state.classes.includes(c)]} onChange={(vals: any) => this.toggleClass(c, vals)}>\n                        <ToggleButton className=\"ClassButton\" value={true}>\n                            <div className=\"ClassButtonPanel\">\n                                <div className=\"ClassImageBorder\">\n                                    <img className=\"ClassThumbnail\" src={`images/classes/${c}.svg`} alt=\"\"/>\n                                </div>\n                                {c}\n                            </div>\n                        </ToggleButton>\n                    </ToggleButtonGroup>)}\n            <Spellbook spells={this.getFilteredSpells()}/>\n        </div>;\n    }\n}\n\nexport default FilterableSpellbook;\n","import React, { Component, lazy, Suspense } from 'react';\nimport { Route, HashRouter } from 'react-router-dom';\nimport ReactSearchBox from 'react-search-box';\nimport './App.css';\nimport { Spell, getSpellId, getSpellType } from './model/spell';\nimport SpellCard from './SpellCard';\nimport FilterableSpellbook from './FilterableSpellbook';\nimport { History } from 'history';\nimport SpellThumbnail from './SpellThumbnail';\nconst LinterResults = lazy(() => import('./LinterResults'))\n\nclass App extends Component<{}, { allSpells: Spell[] }> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      allSpells: []\n    };\n  }\n\n  componentDidMount() {\n    // Fetch spell database.\n    fetch(\"data/spells.json\")\n    .then(response => response.json())\n    .then(json => {\n      this.setState({\n        allSpells: json\n      });\n    });\n  }\n\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <Suspense fallback={<div>Loading...</div>}>\n              <Route exact={true} path=\"/\" render={routeProps => <MainScreenRouter {...routeProps} allSpells={this.state.allSpells}/>} />\n              <Route path=\"/spell/:spellId\" render={routeProps => <SpellRoute {...routeProps} allSpells={this.state.allSpells}/>} />\n              <Route path=\"/linter\" render={routeProps => <LinterRoute {...routeProps} allSpells={this.state.allSpells}/>} />\n            </Suspense>\n          </header>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\ntype SearchItem = {\n  key: string;\n  value: JSX.Element;\n  spell: Spell;\n};\n\nclass MainScreenRouter extends Component<{ match: any, history: History, allSpells: Spell[] }, { isSearching: boolean }> {\n  constructor(props: { match: any, history: History, allSpells: Spell[] }) {\n    super(props);\n\n    this.state = {\n      isSearching: false\n    };\n  }\n\n  onSearchChange(query: string): void {\n    let searchingNow = query.length > 0;\n    if (searchingNow !== this.state.isSearching) {\n      this.setState({\n        ...this.state,\n        isSearching: searchingNow\n      });\n    }\n  }\n\n  onSearchSelect(obj: SearchItem): void {\n    this.props.history.push(`/spell/${getSpellId(obj.spell)}`);\n  }\n\n  render() {\n    let searchData: SearchItem[] = [];\n    for (let spell of this.props.allSpells) {\n      searchData.push({\n        key: spell.name,\n        value: <div className=\"SearchItem\">\n          <SpellThumbnail className=\"SearchItemThumbnail\" spell={spell} />\n          <span className=\"SearchItemName\">{spell.name}</span>\n          <span className=\"SearchItemType\">{getSpellType(spell)}</span>\n        </div>,\n        spell: spell\n      });\n    }\n    let searchBox = <ReactSearchBox\n      placeholder=\"Search spells\"\n      data={searchData}\n      fuseConfigs={{keys: ['key']}}\n      onChange={this.onSearchChange.bind(this)}\n      onSelect={this.onSearchSelect.bind(this)} />;\n\n    return <div>\n      <div key=\"appBar\" className={this.state.isSearching ? \"AppBar AppBar-searching\" : \"AppBar\"}>\n        <h1 className=\"AppTitle\">Spellbook</h1>\n        {this.props.allSpells.length > 0 ? searchBox : []}\n      </div>\n      <FilterableSpellbook key=\"spellbook\" spells={this.props.allSpells}/>\n    </div>;\n  }\n}\n\nclass SpellRoute extends Component<{ match: any, allSpells: Spell[] }, any> {\n  render() {\n    if (this.props.allSpells.length === 0) {\n      return <div></div>;\n    }\n    let spell = this.props.allSpells.find(val => getSpellId(val) === this.props.match.params.spellId);\n    if (spell) {\n      return <div className=\"SpellCardBox\"><SpellCard spell={spell} /></div>;\n    } else {\n      let thumbStyle = {width: \"30px\", height: \"30px\"};\n      return <div>\n        <img style={{...thumbStyle, transform: \"scaleX(-1)\"}} src=\"images/classes/wizard.svg\" alt=\"\" />\n        <img style={thumbStyle} src=\"images/classes/warlock.svg\" alt=\"\" />\n        <img style={thumbStyle} src=\"images/classes/wizard.svg\" alt=\"\" />\n        <h1>Error 404</h1>\n        Spell with ID '{this.props.match.params.spellId}' not found.\n      </div>;\n    }\n  }\n}\n\nclass LinterRoute extends Component<{ match: any, allSpells: Spell[] }, any> {\n  render() {\n    if (this.props.allSpells.length === 0) {\n      return <div></div>;\n    }\n    return <LinterResults spells={this.props.allSpells} />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { PureComponent } from \"react\";\nimport { Spell, getSpellThumbnailUrl } from \"./model/spell\";\nimport './SpellThumbnail.css';\n\n/**\n * A thumbnail for a spell.\n */\nclass SpellThumbnail extends PureComponent<{spell: Spell, showImage?: boolean, className?: string }> {\n    render() {\n        let className = `SpellThumbnail SpellThumbnail-${this.props.spell.school}`;\n        if (this.props.className) {\n            className += \" \" + this.props.className;\n        }\n        if (this.props.showImage === undefined || this.props.showImage) {\n            return <img className={className} src={getSpellThumbnailUrl(this.props.spell)} alt=\"\" />;\n        } else {\n            return <div className={className} />;\n        }\n    }\n}\n\nexport default SpellThumbnail;\n","import React, { PureComponent } from \"react\";\nimport { Spell, getSpellThumbnailUrl, getShortLicenseName, getLicenseUrl, getSpellType, ThumbnailSource } from \"./model/spell\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Link } from \"react-router-dom\";\nimport \"./SpellCard.css\";\nimport \"./hr.css\";\n\ntype Props = {\n    spell: Spell;\n    hide_links?: boolean;\n    hide_footer?: boolean;\n};\n\nconst html_whitelist = [\n    'b', 'i', 'strong', 'br', 'p', 'span', 'div'\n];\n\nfunction is_in_html_whitelist(value: string): boolean {\n    value = value.trim();\n    if (value.startsWith('<')) {\n        for (let item of html_whitelist) {\n            if (value === `<${item}>` || value === `</${item}>` || value === `<${item}/>`) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n/**\n * A card that describes a spell.\n */\nclass SpellCard extends PureComponent<Props> {\n    /**\n     * Create a \"quick stats\" grid to include in the card.\n     */\n    createPropertiesGrid() {\n        let components = [];\n        if (this.props.spell.components.verbal) {\n            components.push(\"V\");\n        }\n        if (this.props.spell.components.somatic) {\n            components.push(\"S\");\n        }\n        if (this.props.spell.components.material) {\n            components.push(\"M\");\n        }\n        return <div className=\"SpellPropertiesGrid\">\n            <div className=\"SpellPropertyItem\">\n                <div className=\"SpellPropertyItemName\">Casting time</div>\n                <div>{this.props.spell.casting_time}</div>\n            </div>\n            <div className=\"SpellPropertyItem\">\n                <div className=\"SpellPropertyItemName\">Range</div>\n                <div>{this.props.spell.range}</div>\n            </div>\n            <div className=\"SpellPropertyItem\">\n                <div className=\"SpellPropertyItemName\">Components</div>\n                <div>{components.join(\", \")}</div>\n            </div>\n            <div className=\"SpellPropertyItem\">\n                <div className=\"SpellPropertyItemName\">Duration</div>\n                <div>{this.props.spell.duration}</div>\n            </div>\n        </div>;\n    }\n\n    createFactFootnote(key: string, value: any) {\n        return <div className=\"SpellFootnote\"><span className=\"SpellPropertyItemName\">{key}:</span> {value}</div>;\n    }\n\n    /**\n     * Creates an \"additional facts\" sheet, which is essentially a collection\n     * of footnotes.\n     */\n    createFootnotes(): JSX.Element[] {\n        let elems: JSX.Element[] = [];\n        let mats = this.props.spell.components.materials_needed;\n        if (mats && mats.length > 0) {\n            elems.push(this.createFactFootnote(\"Materials\", mats.join(\"; \")));\n        }\n        elems.push(this.createFactFootnote(\"Classes\", this.props.spell.classes.join(\", \")));\n        return elems;\n    }\n\n    private renderLink(props: { href: string, title: string, children: any[] }) {\n        if (this.props.hide_links) {\n            return <span>{props.children}</span>;\n        } else {\n            return <Link to={props.href}>{props.children}</Link>;\n        }\n    }\n\n    private allowNode(node: any): boolean {\n        if (node.type === \"html\") {\n            return is_in_html_whitelist(node.value);\n        } else {\n            return true;\n        }\n    }\n\n    private formatDescription(description: string): JSX.Element {\n        let updatedDesc = description.replace(/\\\\n/g, \"\\n\");\n        let renderers = {\n            link: this.renderLink.bind(this)\n        };\n        return <ReactMarkdown\n            className=\"SpellDescription\"\n            source={updatedDesc}\n            renderers={renderers}\n            allowNode={this.allowNode.bind(this)}\n            escapeHtml={false}\n            unwrapDisallowed={true} />;\n    }\n\n    /**\n     * Creates a textual description of the spell.\n     */\n    createDescription(): JSX.Element {\n        let baseDesc = this.formatDescription(this.props.spell.description);\n        if (this.props.spell.quote && this.props.spell.quote.length > 0) {\n            baseDesc = <div>\n                <div className=\"SpellCardFlavorQuote\">“{this.props.spell.quote}”</div>\n                {baseDesc}\n            </div>;\n        }\n        if (this.props.spell.higher_levels) {\n            return <div>\n                {baseDesc}\n                <hr/>\n                {this.formatDescription(this.props.spell.higher_levels)}\n            </div>;\n        } else {\n            return baseDesc;\n        }\n    }\n\n    createSourceCitation(): JSX.Element[] {\n        let src = this.props.spell.source;\n        if (src) {\n            let pageAttribution = src.pages\n                ? \", p. \" + src.pages\n                : \"\";\n\n            return [\n                this.createFactFootnote(\"Source\", <span><i>{src.document}</i>{pageAttribution}.</span>)\n            ];\n        } else {\n            return [];\n        }\n    }\n\n    createExternalLink(text: string, url?: string): JSX.Element | string {\n        if (!url || url.length === 0 || this.props.hide_links) {\n            return text;\n        } else {\n            return <a href={url}>{text}</a>;\n        }\n    }\n\n    citeIconSource(source: ThumbnailSource, omitTitle?: boolean): (JSX.Element | string)[] {\n        let results: (JSX.Element | string)[] = [];\n        if (source.title) {\n            results.push(\n                \"'\",\n                this.createExternalLink(source.title, source.url),\n                \"'\");\n        } else if (!omitTitle) {\n            results.push(this.createExternalLink(\"an icon\", source.url));\n        }\n        results.push(\n            \" by \",\n            this.createExternalLink(source.author, source.author_website),\n            \", licensed under \",\n            this.createExternalLink(getShortLicenseName(source.license), getLicenseUrl(source.license)),\n            \".\");\n        return results;\n    }\n\n    createFooter(): (JSX.Element | string)[] {\n        let sources = this.props.spell.thumbnail_source;\n        if (!sources || sources.length === 0 || this.props.hide_footer) {\n            return [];\n        } else {\n            let firstSource = sources[0];\n            let results: (JSX.Element | string)[] = [];\n            if (firstSource.title) {\n                results.push(\"Icon: \", ...this.citeIconSource(firstSource));\n            } else {\n                results.push(this.createExternalLink(\"Icon\", firstSource.url), \" \", ...this.citeIconSource(firstSource, true));\n            }\n            for (let i = 1; i < sources.length; i++) {\n                results.push(\" Based on \", ...this.citeIconSource(sources[i]));\n            }\n            return results;\n        }\n    }\n\n    render() {\n        let thumbnailUrl = getSpellThumbnailUrl(this.props.spell);\n        let thumbnailSource = this.createFooter();\n        return <div className=\"SpellCardPanel\">\n            <div className=\"SpellCardDescription\">\n                <img className=\"SpellCardThumbnail\" src={thumbnailUrl} alt={this.props.spell.name + \" thumbnail\"} />\n                <div className=\"SpellType\">{getSpellType(this.props.spell)}</div>\n                <div className=\"SpellName\">{this.props.spell.name}</div>\n                <hr/>\n                {this.createPropertiesGrid()}\n                <hr/>\n                {this.createDescription()}\n                <hr/>\n                {this.createFootnotes()}\n                {this.createSourceCitation()}\n            </div>\n            <div className=\"SpellCardFooter\">\n                {thumbnailSource.length > 0 ? <hr/> : []}\n                {this.createFooter()}\n            </div>\n        </div>;\n    }\n}\n\nexport default SpellCard;\n","// Based on jonathandion's react-tilt component, licensed under the MIT license.\n\nimport React, { Component } from 'react';\nimport { findDOMNode } from 'react-dom';\n\ntype Settings = {\n  reverse: boolean,\n  max: number,\n  perspective: number,\n  easing: string,\n  scale: string,\n  speed: number,\n  transition: number,\n  axis: any,\n  reset: boolean,\n};\n\ntype Props = {\n  onPointerEnter?: (e?: React.PointerEvent) => {},\n  onPointerMove?: (e: React.PointerEvent) => {},\n  onPointerLeave?: (e: React.PointerEvent) => {},\n  options?: Settings,\n  className?: string,\n  style?: React.StyleHTMLAttributes<HTMLDivElement>\n};\n\ntype State = {\n  style: React.StyleHTMLAttributes<HTMLDivElement>\n};\n\nclass Tilt extends Component<Props, State> {\n  private width: number | null;\n  private height: number | null;\n  private left: number | null;\n  private top: number | null;\n  private transitionTimeout: number | null;\n  private updateCall: number | null;\n  private element: any;\n  private settings: Settings;\n  private reverse: number;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      style: {}\n    }\n\n    const defaultSettings = {\n      reverse: false,\n      max: 35,\n      perspective: 1000,\n      easing: \"cubic-bezier(.03,.98,.52,.99)\",\n      scale: \"1.1\",\n      speed: 1000,\n      transition: true,\n      axis: null,\n      reset: true\n    };\n\n    this.width = null;\n    this.height = null;\n    this.left = null;\n    this.top = null;\n    this.transitionTimeout = null;\n    this.updateCall = null;\n    this.element = null;\n    this.settings = Object.assign({}, defaultSettings, this.props.options);\n    this.reverse = this.settings.reverse ? -1 : 1;\n  }\n\n  componentDidMount() {\n    this.element = findDOMNode(this);\n    const myNode = this.element;\n    setTimeout(() => {\n      if (myNode.parentElement.querySelector(':hover') === myNode) {\n        this.onPointerEnter();\n      }\n    }, 0);\n  }\n\n  componentWillUnmount() {\n    if (this.transitionTimeout !== null) {\n      clearTimeout(this.transitionTimeout);\n    }\n    if (this.updateCall !== null) {\n      cancelAnimationFrame(this.updateCall);\n    }\n  }\n\n  onPointerEnter(e?: React.PointerEvent) {\n    this.updateElementPosition();\n\n    this.setState(Object.assign({}, this.state, {\n      style: {\n        ...this.state.style,\n        willChange: \"transform\"\n      }\n    }))\n\n    this.setTransition();\n\n    if (this.props.onPointerEnter) {\n      return this.props.onPointerEnter(e);\n    } else {\n      return {};\n    }\n  }\n\n  reset() {\n    window.requestAnimationFrame(() => {\n      this.setState(Object.assign({}, this.state, {\n        style: {\n          ...this.state.style,\n          transform: \"perspective(\" + this.settings.perspective + \"px) rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)\"\n        }\n      }))\n    });\n  }\n\n  onPointerMove(e: React.PointerEvent) {\n    e.persist();\n\n    if (this.updateCall !== null) {\n      window.cancelAnimationFrame(this.updateCall);\n    }\n\n    // this.event = e;\n    this.updateCall = requestAnimationFrame(this.update.bind(this, e));\n\n    if (this.props.onPointerMove) {\n      return this.props.onPointerMove(e);\n    } else {\n      return {};\n    }\n  }\n\n  setTransition() {\n    if (this.transitionTimeout !== null) {\n      clearTimeout(this.transitionTimeout);\n    }\n\n    this.setState(Object.assign({}, this.state, {\n      style: {\n        ...this.state.style,\n        transition: this.settings.speed + \"ms \" + this.settings.easing\n      }\n    }))\n\n    this.transitionTimeout = setTimeout(() => {\n      this.setState(Object.assign({}, this.state, {\n        style: {\n          ...this.state.style,\n          transition: ''\n        }\n      }))\n    }, this.settings.speed) as unknown as number;\n  }\n\n  onPointerLeave(e: React.PointerEvent) {\n    this.setTransition();\n\n    if (this.settings.reset) {\n      this.reset();\n    }\n\n    if (this.props.onPointerLeave) {\n      return this.props.onPointerLeave(e);\n    } else {\n      return {};\n    }\n  }\n\n  getValues(e: React.PointerEvent) {\n    const x = (e.nativeEvent.clientX - this.left!) / this.width!;\n    const y = (e.nativeEvent.clientY - this.top!) / this.height!;\n    const _x = Math.min(Math.max(x, 0), 1);\n    const _y = Math.min(Math.max(y, 0), 1);\n\n    const tiltX = (this.reverse * (this.settings.max / 2 - _x * this.settings.max)).toFixed(2);\n    const tiltY = (this.reverse * (_y * this.settings.max - this.settings.max / 2)).toFixed(2);\n\n    const percentageX = _x * 100\n    const percentageY = _y * 100\n\n    return {\n      tiltX,\n      tiltY,\n      percentageX,\n      percentageY\n    };\n  }\n\n  updateElementPosition() {\n    const rect = this.element.getBoundingClientRect();\n    this.width = this.element.offsetWidth;\n    this.height = this.element.offsetHeight;\n    this.left = rect.left;\n    this.top = rect.top;\n  }\n\n  update(e: React.PointerEvent) {\n    let values = this.getValues(e);\n\n    this.setState(Object.assign({}, this.state, {\n      style: {\n        ...this.state.style,\n        transform: \"perspective(\" + this.settings.perspective + \"px) \" +\n          \"rotateX(\" + (this.settings.axis === \"x\" ? 0 : values.tiltY) + \"deg) \" +\n          \"rotateY(\" + (this.settings.axis === \"y\" ? 0 : values.tiltX) + \"deg) \" +\n          \"scale3d(\" + this.settings.scale + \", \" + this.settings.scale + \", \" + this.settings.scale + \")\"\n      }\n    }))\n\n    this.updateCall = null;\n  }\n\n  render() {\n    const style = Object.assign({}, this.props.style, this.state.style);\n    return <div style={style}\n        className={this.props.className}\n        onPointerEnter={this.onPointerEnter.bind(this)}\n        onPointerMove={this.onPointerMove.bind(this)}\n        onPointerLeave={this.onPointerLeave.bind(this)}>\n        {this.props.children}\n      </div>;\n  }\n}\n\nexport default Tilt;\n","import React, { PureComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { isMobile } from \"react-device-detect\";\nimport ReactHover from \"react-hover\";\nimport Tilt from \"./Tilt\";\nimport { Spell, getSpellId } from \"./model/spell\";\nimport './SpellLink.css';\nimport SpellCard from \"./SpellCard\";\nimport SpellThumbnail from \"./SpellThumbnail\";\n\n/**\n * Creates a URL to a spell card.\n * @param spell The spell to create a URL for.\n */\nexport function createSpellUrl(spell: Spell) {\n    return `/spell/${getSpellId(spell)}`;\n}\n\n/**\n * A reference to a spell, formatted as an image.\n */\nclass SpellLink extends PureComponent<{spell: Spell}> {\n    render() {\n        const hoverOptions = {\n            followCursor: false,\n            shiftX: 20,\n            shiftY: 0\n        };\n        let spellLink = createSpellUrl(this.props.spell);\n        let linkImage = <Link className=\"SpellLink\" to={spellLink}>\n                <SpellThumbnail className=\"SpellLinkThumbnail\" spell={this.props.spell} />\n                <div>{this.props.spell.name}</div>\n            </Link>;\n        if (isMobile) {\n            return <Tilt>{linkImage}</Tilt>;\n        } else {\n            return <ReactHover options={hoverOptions}>\n                    <ReactHover.Trigger type='trigger'>\n                        {linkImage}\n                    </ReactHover.Trigger>\n                    <ReactHover.Hover type='hover'>\n                        <div className=\"ExtraSpellBox\">\n                            <Link className=\"ExtraSpellLink\" to={spellLink}>\n                                <SpellCard spell={this.props.spell} hide_links hide_footer />\n                            </Link>\n                        </div>\n                    </ReactHover.Hover>\n                </ReactHover>;\n        }\n    }\n}\n\nexport class SpellLinkPlaceholder extends PureComponent<{spell: Spell}> {\n    render() {\n        let spellLink = createSpellUrl(this.props.spell);\n        return <Link className=\"SpellLink\" to={spellLink}>\n                <SpellThumbnail className=\"SpellLinkThumbnail\" spell={this.props.spell} showImage={false} />\n                <div>{this.props.spell.name}</div>\n            </Link>;\n    }\n}\n\nexport default SpellLink;\n","export type Class =\n    \"barbarian\" | \"bard\" | \"cleric\"\n    | \"druid\" | \"fighter\" | \"monk\"\n    | \"paladin\" | \"ranger\" | \"rogue\"\n    | \"sorcerer\" | \"warlock\" | \"wizard\";\n\nexport const allClasses: Class[] = [\n    \"barbarian\", \"bard\", \"cleric\",\n    \"druid\", \"fighter\", \"monk\",\n    \"paladin\", \"ranger\", \"rogue\",\n    \"sorcerer\", \"warlock\", \"wizard\"\n];\n\n/**\n * The components required to cast a spell.\n */\nexport type SpellComponents = {\n    /**\n     * Tells if the spell has any material components.\n     */\n    material: boolean;\n    /**\n     * A list of materials needed to cast the spell.\n     */\n    materials_needed?: string[];\n    /**\n     * Tells if a spell has a somatic component.\n     */\n    somatic: boolean;\n    /**\n     * Tells if a spell has a verbal component.\n     */\n    verbal: boolean;\n};\n\nexport type SpellLevel = \"cantrip\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\";\n\nexport type School = \"abjuration\" | \"conjuration\" | \"divination\" | \"enchantment\"\n    | \"evocation\" | \"illusion\" | \"necromancy\" | \"transmutation\";\n\n/**\n * Gets a URL to a particular spell's thumbnail.\n * @param spell The spell to find a thumbnail for.\n */\nexport function getSpellThumbnailUrl(spell: Spell): string {\n    if (spell.thumbnail_url) {\n        return spell.thumbnail_url;\n    } else {\n        // If we don't have a thumbnail for the spell, then we'll\n        // just create a URL that points to the school's thumbnail.\n        return `images/schools/${spell.school}.svg`;\n    }\n}\n\nconst sortedLevels: SpellLevel[] = [\"cantrip\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\nconst sortedSchools: School[] = [\n    \"abjuration\", \"conjuration\", \"divination\", \"enchantment\",\n    \"evocation\", \"illusion\", \"necromancy\", \"transmutation\"\n];\n\nfunction sortBy<T>(list: T[], getKey: (val: T) => any): T[] {\n    return list.sort((a, b) => {\n        let x = getKey(a);\n        let y = getKey(b);\n        return +(x > y) - +(y > x);\n    });\n}\n\nfunction groupBy<T, TKey>(\n    list: T[],\n    sortedGroups: TKey[],\n    getKey: (val: T) => TKey):\n    { key: TKey, values: T[] }[] {\n\n    let bins = new Map<TKey, T[]>();\n    for (let value of list) {\n        let key = getKey(value);\n        let bin = bins.get(key);\n        if (!bin) {\n            bin = [];\n            bins.set(key, bin);\n        }\n        bin.push(value);\n    }\n\n    let levelSpellPairs: { key: TKey, values: T[] }[] = [];\n    for (let key of sortedGroups) {\n        let values = bins.get(key);\n        if (values) {\n            levelSpellPairs.push({ key, values });\n        }\n    }\n    return levelSpellPairs;\n}\n\n/**\n * Groups a list of spells by level.\n * @param spells A list of spells to group.\n */\nexport function spellsByLevel(spells: Spell[]): { level: SpellLevel, spells: Spell[] }[] {\n    return groupBy(sortBy(spells, s => s.name), sortedLevels, s => s.level)\n        .map(({ key, values }) => ({ level: key, spells: values }));\n}\n\n/**\n * Groups a list of spells by school.\n * @param spells A list of spells to group.\n */\nexport function spellsBySchool(spells: Spell[]): { school: School, spells: Spell[] }[] {\n    return groupBy(sortBy(spells, s => s.name), sortedSchools, s => s.school)\n        .map(({ key, values }) => ({ school: key, spells: values }));\n}\n\n/**\n * A description of a spell's source.\n */\nexport type SpellSource = {\n    /**\n     * The document in which the spell was originally described.\n     */\n    document: string;\n\n    /**\n     * The pages in the document that describe the spell.\n     */\n    pages?: string;\n};\n\n/**\n * A code that specifies a particular license.\n */\nexport type LicenseCode =\n    'CC-BY-3.0' | 'CC0-1.0'\n    | 'GPL-1.0-only' | 'GPL-1.0-or-later'\n    | 'GPL-2.0-only' | 'GPL-2.0-or-later'\n    | 'GPL-3.0-only' | 'GPL-3.0-or-later';\n\n/**\n * Gets a license's name based on its code.\n * @param code A license code.\n */\nexport function getLicenseName(code: LicenseCode): string {\n    switch (code) {\n        case 'CC-BY-3.0':\n            return 'Creative Commons Attribution 3.0 Unported';\n        case 'CC0-1.0':\n            return 'Creative Commons CC0 1.0 Universal';\n\n        case 'GPL-1.0-only':\n            return 'GNU General Public License v1.0 only';\n        case 'GPL-1.0-or-later':\n            return 'GNU General Public License v1.0 or later';\n        case 'GPL-2.0-only':\n            return 'GNU General Public License v2.0 only';\n        case 'GPL-2.0-or-later':\n            return 'GNU General Public License v2.0 or later';\n        case 'GPL-3.0-only':\n            return 'GNU General Public License v3.0 only';\n        case 'GPL-3.0-or-later':\n            return 'GNU General Public License v3.0 or later';\n    }\n}\n\n/**\n * Gets a license's name based on its code. If possible, the license\n * is shortened.\n * @param code A license code.\n */\nexport function getShortLicenseName(code: LicenseCode): string {\n    let name = getLicenseName(code);\n    let suffices = [\"only\", \"or later\"];\n    for (let suffix of suffices) {\n        if (name.endsWith(suffix)) {\n            name = name.substring(0, name.length - suffix.length).trimRight();\n        }\n    }\n    return name;\n}\n\n/**\n * Gets a URL to a license's text based on its code.\n * @param code A license code.\n */\nexport function getLicenseUrl(code: LicenseCode): string {\n    switch (code) {\n        case 'CC-BY-3.0':\n            return 'https://creativecommons.org/licenses/by/3.0/legalcode';\n        case 'CC0-1.0':\n            return 'https://creativecommons.org/publicdomain/zero/1.0/legalcode';\n\n        case 'GPL-1.0-only':\n            return 'https://www.gnu.org/licenses/old-licenses/gpl-1.0-standalone.html';\n        case 'GPL-1.0-or-later':\n            return 'https://www.gnu.org/licenses/old-licenses/gpl-1.0-standalone.html';\n        case 'GPL-2.0-only':\n            return 'https://www.gnu.org/licenses/old-licenses/gpl-2.0-standalone.html';\n        case 'GPL-2.0-or-later':\n            return 'https://www.gnu.org/licenses/old-licenses/gpl-2.0-standalone.html';\n        case 'GPL-3.0-only':\n            return 'https://www.gnu.org/licenses/gpl-3.0-standalone.html';\n        case 'GPL-3.0-or-later':\n            return 'https://www.gnu.org/licenses/gpl-3.0-standalone.html';\n    }\n}\n\n/**\n * A description of a thumbnail's source.\n */\nexport type ThumbnailSource = {\n    /**\n     * The thumbnail's title: its name or file name.\n     */\n    title?: string;\n\n    /**\n     * A URL to the thumbnail's original site.\n     */\n    url?: string;\n\n    /**\n     * The license under which the thumbnail is licensed.\n     */\n    license: LicenseCode;\n\n    /**\n     * The name of the thumbnail's author.\n     */\n    author: string;\n\n    /**\n     * The author's website, if any.\n     */\n    author_website?: string;\n};\n\n/**\n * A description of a spell.\n */\nexport type Spell = {\n    /**\n     * The amount of time it takes to cast the spell.\n     */\n    casting_time: string;\n\n    /**\n     * A list of all classes that can cast the spell.\n     */\n    classes: Class[];\n\n    /**\n     * The spell's components.\n     */\n    components: SpellComponents;\n\n    /**\n     * A description of the spell's effect.\n     */\n    description: string;\n\n    /**\n     * An optional description of what the spell does at higher levels.\n     */\n    higher_levels?: string;\n\n    /**\n     * A description of the spell's duration.\n     */\n    duration: string;\n\n    /**\n     * The spell's level.\n     */\n    level: SpellLevel;\n\n    /**\n     * The spell's name.\n     */\n    name: string;\n\n    /**\n     * The spell's range.\n     */\n    range: string;\n\n    /**\n     * Tells if the spell can be cast as a ritual.\n     */\n    ritual: boolean;\n\n    /**\n     * The school of magic to which the spell belongs.\n     */\n    school: School;\n\n    /**\n     * An optional URL to the spell's thumbnail.\n     */\n    thumbnail_url?: string;\n\n    /**\n     * An optional list of \n     */\n    thumbnail_source?: ThumbnailSource[];\n\n    /**\n     * An optional accent color for the spell.\n     */\n    accent_color?: string;\n\n    /**\n     * The document in which the spell was originally described.\n     */\n    source?: SpellSource;\n\n    /**\n     * A flavor quote.\n     */\n    quote?: string;\n};\n\n/**\n * Gets an identifier for a spell that is safe for use in a URL.\n * @param spell The spell to get an identifier for.\n */\nexport function getSpellId(spell: Spell): string {\n    let name = spell.name;\n    const whitelist = /[0-9a-zA-Z]/;\n    let enc = '';\n    let dash = false;\n    for (let c of name.toLowerCase()) {\n        if (whitelist.test(c)) {\n            enc += c;\n            dash = false;\n        } else if (!dash) {\n            enc += '-';\n            dash = true;\n        }\n    }\n    return enc;\n}\n\nfunction getOrinalSuffix(i: number) {\n    let last = i % 10;\n    if (last === 1) {\n        return 'st';\n    } else if (last === 2) {\n        return 'nd';\n    } else if (last === 3) {\n        return 'rd';\n    } else {\n        return 'th';\n    }\n}\n\nexport function getSpellType(spell: Spell) {\n    let result: string;\n    if (spell.level === \"cantrip\") {\n        result = `${spell.school} cantrip`;\n    } else {\n        result = `${spell.level}${getOrinalSuffix(parseInt(spell.level))}-level ${spell.school}`;\n    }\n    if (spell.ritual) {\n        result += \" (ritual)\";\n    }\n    return result;\n}\n"],"sourceRoot":""}